{
  "name": "merge2",
  "description": "Merge multiple streams into one stream in sequence or parallel.",
  "authors": [
    "Yan Qing <admin@zensh.com>"
  ],
  "version": "0.3.1",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git@github.com:teambition/merge2.git"
  },
  "homepage": "https://github.com/teambition/merge2",
  "keywords": [
    "merge2",
    "multiple",
    "sequence",
    "parallel",
    "merge",
    "stream",
    "merge stream",
    "sync"
  ],
  "dependencies": {
    "through2": "^1.1.1"
  },
  "devDependencies": {
    "gulp": ">=3.8.8",
    "gulp-jshint": ">=1.8.4",
    "gulp-mocha": ">=1.0.0",
    "gulp-sequence": ">=0.3.0",
    "mocha": ">=1.21.0",
    "should": ">=4.0.4",
    "thunks": ">=2.1.0"
  },
  "scripts": {
    "test": "gulp test"
  },
  "ignore": [
    "**/.*",
    "node_modules",
    "test",
    "gulpfile.js"
  ],
  "readme": "merge2 v0.3.1 [![Build Status](https://travis-ci.org/teambition/merge2.svg)](https://travis-ci.org/teambition/merge2)\n====\n> Merge multiple streams into one stream in sequence or parallel.\n\n## Install\n\nInstall with [npm](https://npmjs.org/package/merge2)\n\n```\nnpm install merge2\n```\n\n\n## Usage\n\n```js\nvar gulp = require('gulp'),\n  merge2 = require('merge2'),\n  concat = require('gulp-concat'),\n  minifyHtml = require('gulp-minify-html'),\n  ngtemplate = require('gulp-ngtemplate');\n\ngulp.task('app-js', function () {\n  return merge2(\n      gulp.src('static/src/tpl/*.html')\n        .pipe(minifyHtml({empty: true}))\n        .pipe(ngtemplate({\n          module: 'genTemplates',\n          standalone: true\n        })\n      ), gulp.src([\n        'static/src/js/app.js',\n        'static/src/js/locale_zh-cn.js',\n        'static/src/js/router.js',\n        'static/src/js/tools.js',\n        'static/src/js/services.js',\n        'static/src/js/filters.js',\n        'static/src/js/directives.js',\n        'static/src/js/controllers.js'\n      ])\n    )\n    .pipe(concat('app.js'))\n    .pipe(gulp.dest('static/dist/js/'));\n});\n```\n\n```js\nvar stream = merge2([stream1, stream2], stream3, {end: false})\n//...\nstream.add(stream4, stream5);\n//..\nstream.end();\n```\n\n```js\n// equal to merge2([stream1, stream2], stream3)\nvar stream = merge2();\nstream.add([stream1, stream2]);\nstream.add(stream3);\n```\n\n```js\n// merge order:\n//   1. merge `stream1`;\n//   2. merge `stream2` and `stream3` in parallel after `stream1` merged;\n//   3. merge 'stream4' after `stream2` and `stream3` merged;\nvar stream = merge2(stream1, [stream2, stream3], stream4);\n\n// merge order:\n//   1. merge `stream5` and `stream6` in parallel after `stream4` merged;\n//   2. merge 'stream7' after `stream5` and `stream6` merged;\nstream.add([stream5, stream6], stream7);\n```\n\n```js\n// nest merge\n// equal to merge2(stream1, stream2, stream6, stream3, [stream4, stream5]);\nvar streamA = merge2(stream1, stream2);\nvar streamB = merge2(stream3, [stream4, stream5]);\nvar stream = merge2(streamA, streamB);\nstreamA.add(stream6);\n```\n\n## API\n\n```js\nvar merge2 = require('merge2');\n```\n\n### merge2()\n### merge2(options)\n### merge2(stream1, stream2, ..., streamN)\n### merge2(stream1, stream2, ..., streamN, options)\n### merge2(stream1, [stream2, stream3, ...], streamN, options)\nreturn a duplex stream (mergedStream). streams in array will be merged in parallel.\n\n### mergedStream.add(stream)\n### mergedStream.add(stream1, [stream2, stream3, ...], ...)\nreturn the mergedStream.\n\n#### stream\n\n*option*\n\nType: `Readable` or `Duplex` or `Transform` stream.\n\n#### options\n\n*option*\n\nType: `Object`.\n\n* **end** - `Boolean` - if `end === false` then mergedStream will not be auto ended, you should end by yourself. **Default:** `undefined`\n\n* **objectMode** - `Boolean` . **Default:** `true`\n\n`objectMode` and other options(`highWaterMark`, `defaultEncoding` ...) is same as Node.js `Stream`.\n\n## License\n\nMIT Â© [Teambition](http://teambition.com)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/teambition/merge2/issues"
  },
  "_id": "merge2@0.3.1",
  "_shasum": "b961e8be10c69569abbac673cb76f7fe75d359f4",
  "_from": "merge2@>=0.3.1 <0.4.0",
  "_resolved": "https://registry.npmjs.org/merge2/-/merge2-0.3.1.tgz"
}
