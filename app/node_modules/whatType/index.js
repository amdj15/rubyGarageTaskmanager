(function(root, factory) {
	if (typeof root.define === 'function' && root.define.amd) {
		root.define(factory);
	} else if (module !== undefined && typeof exports === 'object') {
		module.exports = factory();
	} else {
		root.whatType = factory();
	}
})(this, function() {
	'use strict';

	var whatType = {};

	var types = ['Array', 'Object', 'Number', 'String', 'Null', 'Undefined', 'Function', 'Boolean', 'Date', 'RegExp'];

	var _getType = function(elem) {
		return Object.prototype.toString.call(elem).slice(8, -1);
	};

	// Create functions checkers for each type
	for (var i = 0; i < types.length; i++) {
		whatType['is' + types[i]] = (function(type) {
			return function(elem) {
				return _getType(elem) === type;
			};
		})(types[i]);
	}

	// return element type
	whatType.is = function(elem) {
		if (elem !== elem) {
			return 'NaN';
		}

		return _getType(elem).toLowerCase();
	};

	return whatType;
});