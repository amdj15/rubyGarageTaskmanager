!function(t,r){var e=r.module("taskmanager",["ngResource","ui.sortable","ui.bootstrap","ui.router"]);e.config(["$stateProvider","$httpProvider",function(t,r){t.state("main",{templateUrl:"main.html"}).state("auth",{templateUrl:"auth.html",controller:"authCtrl"}),r.interceptors.push(["$q","$injector",function(t,r){return{responseError:function(e){return 401===e.status&&r.get("$state").go("auth"),t.reject(e)}}}])}]).run(["$state",function(t){t.go("main")}]),t.app=e}(window,window.angular);
!function(n,a){function i(n,a,i){n.signUp={data:{email:"",password:""},action:function(o){if(!o.$invalid){var t=new a(n.signUp.data);t.$create().then(function(){i.go("main")})["catch"](function(n){console.warn(n)})}}},n.signIn={data:{email:"",password:""},error:"",action:function(o){if(!o.$invalid){var t=new a(n.signIn.data);t.$login().then(function(){i.go("main")})["catch"](function(a){console.warn(a),n.signIn.error=a.data.error})}}}}a.controller("authCtrl",["$scope","userRsc","$state",i])}(window,window.app);
!function(n,t){function o(n,t){n.$state=t}t.controller("mainCtrl",["$scope","$state",o])}(window,window.app);
!function(t,e){function n(t,e,n,s){t["delete"]=function(){confirm("Are you sure?")&&t.project.$delete(function(){t.list.splice(t.list.indexOf(t.project),1)})},t.tasks=e.tasks({id:t.project.id}),t.tasks.$promise.then(function(){for(var e in t.tasks)t.tasks[e]=new n(t.tasks[e])}),t.newTask={val:"",save:function(e){if(e.$invalid)return alert("Enter task text");var s=new n({projectId:t.project.id,text:this.val});s.$save().then(function(){t.tasks.push(s),t.newTask.val="",o()})["catch"](function(t){console.warn(t)})}},t.deleteTask=function(e){confirm("Are you sure?")&&e.$delete(function(){t.tasks.splice(t.tasks.indexOf(e),1)})};var o=function(){t.project.tasksOrder=[],t.tasks.forEach(function(e){t.project.tasksOrder.push(e.id)}),t.project.$sort()};t.sortOptions={handle:".move",stop:o},function(){var e;t.editProjectName=function(){e&&s.cancel(e),e=s(function(){t.project.$save()},700)}}(),function(){var e;t.saveTask=function(t,n){return n?(e&&s.cancel(e),void(e=s(function(){t.$save()},700))):t.$save()}}()}e.controller("projectCtrl",["$scope","projects","task","$timeout","$filter",n])}(window,window.app);
!function(n,t){function o(n,t,o,e){n.list=t.query(),n.createProject=function(){var o=new t({name:"New project"});o.$save().then(function(){n.list.push(o)})["catch"](function(n){console.warn(n)})},n.signOut=function(){o.logout().$promise.then(function(){e.go("auth")})}}t.controller("projectsCtrl",["$scope","projects","userRsc","$state",o])}(window,window.app);
!function(o,e){e.directive("compareTo",function(){return{require:"ngModel",scope:{otherModelValue:"=compareTo"},link:function(o,e,n,r){r.$validators.compareTo=function(e){return e==o.otherModelValue},o.$watch("otherModelValue",function(){r.$validate()})}}})}(window,window.app);
!function(e,t){t.directive("popOverEdit",["$templateCache","$compile",function(t,a){return{restrict:"A",scope:{data:"=popOverEdit",change:"&popOverChange"},link:function(n,i){var p=angular.element(e);i.on("click",function(e){if(e.stopPropagation(),e.target.getAttribute("pop-over-edit")&&!(e.target.children.length>0)){var c=a(t.get("popoveredit.html"))(n),o=function(){c.remove(),p.off("click",o),n.$apply()};p.on("click",o),i.append(c),c.find("input").on("input",n.change),c.find("input")[0].focus(),n.$apply()}})}}}]),t.directive("popOverDatepicker",["$templateCache","$compile","$filter",function(t,a,n){return{restrict:"A",scope:{initialDate:"=popOverDatepicker",change:"&popOverDatepickerChange"},link:function(i,p,c){var o=angular.element(e);i.date=angular.copy(i.initialDate),i.date=new Date(i.date),("Invalid Date"==i.date||0===i.date.valueOf())&&(i.date=null),i.minDate=new Date,p.on("click",function(e){if(e.stopPropagation(),!(null===e.target.getAttribute("pop-over-datepicker")||e.target.children.length>0)){var n=a(t.get("datepicker.html"))(i),c=function(){n.remove(),o.off("click",c),i.$apply()};o.on("click",c),p.append(n),i.$apply()}}),i.$watch("date",function(e,t){e!==t&&(i.initialDate=n("date")(i.date,c.format),i.change())})}}}])}(window,window.app);
!function(t,r){r.factory("projects",["$resource",function(t){return t("/projects/:listCtrl:id/:docCtrl",{id:"@id",listCtrl:"@listCtrl",docCtrl:"@docCtrl"},{"delete":{method:"DELETE",params:{docCtrl:"delete"}},tasks:{method:"GET",isArray:!0,params:{docCtrl:"tasks"}},sort:{method:"POST",params:{docCtrl:"sort"}}})}])}(window,window.app);
!function(i,n){n.factory("task",["$resource",function(i){return i("/tasks/:id",{id:"@id"})}])}(window,window.app);
!function(n,o){o.factory("userRsc",["$resource",function(n){return n("/user/:id/:action",{},{login:{method:"POST",params:{action:"signIn"}},logout:{method:"GET",params:{action:"signOut"}},create:{method:"POST",params:{action:"signUp"}}})}])}(window,window.app);
angular.module("taskmanager").run(["$templateCache",function(s){s.put("auth.html",'<tabset class="auth">\n	<tab heading="Sign In">\n		<form novalidate name="signInForm" ng-submit="signIn.action(signInForm)" class="form-horizontal auth-form">\n			<div class="form-group" ng-class="{ \'has-error\' : !signInForm.email.$valid  && (signInForm.email.$dirty || signInForm.$submitted)}">\n				<label for="inputEmail3" class="col-sm-2 control-label">Email</label>\n				<div class="col-sm-10">\n					<input type="email" name="email" required ng-model="signIn.data.email"  class="form-control" id="inputEmail3" placeholder="Email">\n					<span class="error" ng-show="signInForm.email.$error.email">Enter valid email</span>\n				</div>\n			</div>\n			<div class="form-group" ng-class="{ \'has-error\' : !signInForm.password.$valid  && (signInForm.password.$dirty || signInForm.$submitted)}">\n				<label for="inputPassword3" class="col-sm-2 control-label">Password</label>\n				<div class="col-sm-10">\n					<input required  name="password" ng-model="signIn.data.password" type="password" class="form-control" id="inputPassword3" placeholder="Password">\n				</div>\n			</div>\n			<div class="form-group">\n				<div class="col-sm-offset-2 col-sm-10">\n					<button type="submit" class="btn btn-info">Sign In</button>\n					<button type="reset" class="btn btn-warning">Reset</button>\n					<span class="error" ng-if="signIn.error">{{ signIn.error }}</span>\n				</div>\n			</div>\n		</form>\n	</tab>\n\n	<tab heading="Sign Up">\n		<form name="signUpForm" novalidate class="form-horizontal auth-form" ng-submit="signUp.action(signUpForm)">\n			<div class="form-group" ng-class="{ \'has-error\' : !signUpForm.email.$valid  && (signUpForm.email.$dirty || signUpForm.$submitted)}">\n				<label for="inputEmail3" class="col-sm-2 control-label">Email</label>\n				<div class="col-sm-10">\n					<input required ng-model="signUp.data.email" type="email" name="email" class="form-control" id="inputEmail3" placeholder="Email">\n					<span class="error" ng-show="signUpForm.email.$error.email">Enter valid email</span>\n				</div>\n			</div>\n			<div class="form-group" ng-class="{ \'has-error\' : !signUpForm.password.$valid  && (signUpForm.password.$dirty || signUpForm.$submitted)}">\n				<label for="inputPassword3" class="col-sm-2 control-label">Password</label>\n				<div class="col-sm-10">\n					<input ng-minlength="6" ng-maxlength="20" required ng-model="signUp.data.password" type="password" name="password" class="form-control" id="inputPassword3" placeholder="Password">\n					<span class="error" ng-show="signUpForm.password.$error.minlength">Min length is 6</span>\n					<span class="error" ng-show="signUpForm.password.$error.maxlength">Max length is 20</span>\n				</div>\n			</div>\n			<div class="form-group" ng-class="{ \'has-error\' : !signUpForm.confirmPassword.$valid  && (signUpForm.confirmPassword.$dirty || signUpForm.$submitted)}">\n				<label for="inputPassword4" class="col-sm-2 control-label">Confirm password</label>\n				<div class="col-sm-10">\n					<input compare-to="signUp.data.password" ng-model="confirmPassword" required type="password" name="confirmPassword" class="form-control" id="inputPassword4" placeholder="Confirm password">\n\n					<span class="error" ng-show="signUpForm.confirmPassword.$error.compareTo && signUpForm.confirmPassword.$dirty">Passwords doesnt match </span>\n				</div>\n			</div>\n			<div class="form-group">\n				<div class="col-sm-offset-2 col-sm-10">\n					<button type="submit" class="btn btn-info">Sign Up</button>\n					<button type="reset" class="btn btn-warning">Reset</button>\n				</div>\n			</div>\n		</form>\n	</tab>\n</tabset>')}]);
angular.module("taskmanager").run(["$templateCache",function(e){e.put("datepicker.html",'<div class="popover right calendar">\n	<div class="arrow"></div>\n\n	<div class="popover-inner">\n		<div name="popoverEditForm" class="popover-content form-inline">\n			<h4>Deadline</h4>\n			<div>\n				<datepicker ng-model="date" min-date="minDate" show-weeks="true" class="well well-sm"></datepicker>\n			</div>\n		</div>\n	</div>\n</div>')}]);
angular.module("taskmanager").run(["$templateCache",function(t){t.put("main.html",'<div class="projects" ng-controller="projectsCtrl">\n	<section ng-repeat="project in list" ng-controller="projectCtrl" ng-include="\'project.html\'"></section>\n\n	<div class="create-project">\n		<a href ng-click="createProject()" class="btn btn-primary">Add Project</a>\n		<a href ng-click="signOut()" class="btn btn-default">Log out</a>\n	</div>\n</div>')}]);
angular.module("taskmanager").run(["$templateCache",function(r){r.put("popoveredit.html",'<div class="popover top edit-popover">\n	<div class="arrow"></div>\n\n	<div class="popover-inner">\n		<form name="popoverEditForm" class="popover-content form-inline">\n			<div class="form-group" ng-class="{ \'has-error\' :  popoverEditForm.data.$invalid }">\n				<input type="text" ng-model="data" required name="data" class="form-control"/>\n				<div ng-show="popoverEditForm.data.$error.required" class="error text-center">Name is required</div>\n			</div>\n		</form>\n	</div>\n</div>')}]);
angular.module("taskmanager").run(["$templateCache",function(n){n.put("project.html",'<div class="head">\n	<div class="title">\n		<span class="text">\n			<span class="glyphicon glyphicon-calendar icon"></span> {{ project.name }}\n		</span>\n\n		<div class="controls">\n			<a href class="edit glyphicon glyphicon-pencil" pop-over-edit="project.name" pop-over-change="editProjectName()"></a>\n			<a href class="remove glyphicon glyphicon-trash" ng-click="delete()"></a>\n		</div>\n	</div>\n</div>\n\n<div class="create-task">\n	<span class="icon glyphicon glyphicon-plus"></span>\n	<form name="newTaskForm" class="input-wrap" ng-submit="newTask.save(newTaskForm)">\n\n		<input required name="newtask" placeholder="Start typing here to create task..." type="text" ng-model="newTask.val" />\n		<button class="add">Add task</button>\n	</form>\n</div>\n\n<ul class="tasks" ui-sortable="sortOptions" ng-model="tasks">\n	<li ng-repeat="task in tasks" class="clearfix">\n		<div class="status">\n			<input type="checkbox" ng-change="saveTask(task)" ng-model="task.complete" ng-true-value="1" ng-false-value="0" />\n		</div>\n		<div class="text" ng-class="{ cross : task.complete }">{{ task.text }}</div>\n		<div class="control text-center">\n			<span class="move glyphicon glyphicon-menu-hamburger"></span>\n			<span class="glyphicon glyphicon-calendar icon" pop-over-datepicker="task.deadline" pop-over-datepicker-change="saveTask(task, true)" format="yyyy-MM-dd"></span>\n			<span class="glyphicon glyphicon-pencil" pop-over-edit="task.text" pop-over-change="saveTask(task, true)"></span>\n			<span class="glyphicon glyphicon-trash" ng-click="deleteTask(task)"></span>\n		</div>\n	</li>\n</ul>')}]);